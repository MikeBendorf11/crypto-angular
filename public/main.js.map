{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/CryptoModel.ts","webpack:///./src/app/app.about.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.currencyservice.ts","webpack:///./src/app/app.detail.html","webpack:///./src/app/app.detail.ts","webpack:///./src/app/app.home.ts","webpack:///./src/app/app.links.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.nameService.ts","webpack:///./src/app/app.priceComp.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export class CryptoCurrencyType {\r\n   name:   string;\r\n   symbol: string; \r\n   price:  number;\r\n}\r\n\r\nexport const coinList = \r\n[ {\"name\":\"Bitcoin\", \"symbol\":\"BTC\", \"price\":null,  \"img\":\"https://www.cryptocompare.com/media/19633/btc.png\"},\r\n  {\"name\":\"Ethereum\", \"symbol\":\"ETH\", \"price\":null, \"img\":\"https://www.cryptocompare.com/media/20646/eth_logo.png\"},\r\n  {\"name\":\"Litecoin\", \"symbol\":\"LTC\", \"price\":null, \"img\":\"https://www.cryptocompare.com/media/19782/litecoin-logo.png\"}];","import {Component} from '@angular/core';\r\nimport {NameService} from './app.nameService';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  template: \r\n  `<p>Please enter your name here:</p>\r\n  \r\n    <input #nm=\"ngModel\" [(ngModel)]=\"name\" pattern=\"[a-zA-Z]*\" minlength=\"2\" value=\"{{name}}\" required/>&nbsp;\r\n    <input (click)=\"setKey(nm.value, nm.valid)\" type=\"submit\" />\r\n    <br><br>\r\n    <p #ap [hidden]=\"nm.valid || nm.pristine\"> Minimum 2 characters and only alphabetical</p>\r\n  `,\r\n  providers: [NameService]\r\n})\r\n\r\nexport class AboutComponent {\r\n  name: string;\r\n  constructor(nameService: NameService, private router: Router){\r\n    this.name = nameService.name;\r\n    \r\n  }\r\n  \r\n  setKey(name: string, valid: boolean){\r\n    if(valid){\r\n      sessionStorage.setItem('name', name);\r\n      this.name = name;\r\n      this.router.navigate(['/'])\r\n      window.location.reload();\r\n    }\r\n    else{\r\n      console.log('\"' + name + '\" Not a valid string');\r\n    }\r\n\r\n  }\r\n}","module.exports = \"<div id=\\\"container\\\">\\r\\n  <div id=\\\"top-nav\\\">\\r\\n    <app-links></app-links>\\r\\n    <span>Welcome {{name}}</span>\\r\\n  </div>\\r\\n  \\r\\n  <!-- Where router should display a view -->\\r\\n  <router-outlet></router-outlet>\\r\\n  <div id=\\\"bottom-nav\\\">\\r\\n    <app-links></app-links>\\r\\n    <span id=\\\"url\\\">Uses https://www.cryptocompare.com/api/</span>\\r\\n  </div>\\r\\n  \\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\nimport { NameService } from './app.nameService';\n\n@Component({\n    selector: 'app-root',\n    templateUrl:'app.component.html',\n             providers: [NameService]\n})\nexport class AppComponent {\n    name: String;\n    constructor( nameService: NameService) {\n        this.name = nameService.name;\n    }\n}\n\n","import { Injectable }      from '@angular/core';\r\nimport { Http, Response }  from '@angular/http';\r\nimport { Observable}       from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n\r\n@Injectable()\r\nexport class MyCurrencyService {  //for BTC\r\n    symbol: string;\r\n    constructor(private http: Http,\r\n                private route: ActivatedRoute\r\n    ) { \r\n        route.params.forEach(params=>{\r\n            this.symbol = params['symbol']\r\n            \r\n        })\r\n    }\r\n\r\n    getAllCurrencyPrices(): Observable<string[]> {\r\n        let dataUrl = 'https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,LTC&tsyms=USD'; \r\n        return this.http.get(dataUrl)\r\n       .pipe(map(this.extractData),\r\n        catchError(this.handleError.bind(this)))\r\n    }\r\n\r\n    // Notice how BTC is hard-coded in the URL below. Hint: We might need a parameter \r\n    // which can be used to dynamically adjust the URL. \r\n    getCurrencyDetail(routeValue, active): Observable<string[]> {\r\n        if(active) this.symbol = routeValue;\r\n        let url = `https://min-api.cryptocompare.com/data/histoday?fsym=${this.symbol}&tsym=USD&limit=1`\r\n        let FINAL_TIME = 1;\r\n        return this.http.get(url)\r\n        .pipe(map(this.extractData),\r\n         catchError(this.handleError.bind(this)))\r\n    }\r\n\r\n    private extractData(res: Response) {\r\n        let body = res.json();\r\n        return body;\r\n    }\r\n\r\n    private handleError(error: any) {\r\n        throw(error);\r\n    }\r\n}\r\n","module.exports = \"<div id=\\\"detailCont\\\">  \\r\\n  <div id=\\\"detLabel\\\">\\r\\n    <img width=\\\"50px\\\" src=\\\"./assets/images/{{symbol}}.png\\\" >\\r\\n    <b>{{coinName}}</b>\\r\\n  </div>\\r\\n  <div id=\\\"table-div\\\">\\r\\n    <table>\\r\\n    <tr>\\r\\n      <td><b>{{symbol}}</b></td>\\r\\n      <td>\\r\\n        {{price | currency:'USD'  }} USD <app-trend [index]=\\\"index\\\"></app-trend>\\r\\n      </td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <td>Open</td>\\r\\n      <td>{{priceInfo.open | currency:'USD'  }} USD</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <td>Close</td>\\r\\n      <td>{{priceInfo.close | currency:'USD'  }} USD</td>\\r\\n    </tr>\\r\\n  </table>\\r\\n  </div>\\r\\n  \\r\\n  \\r\\n  \\r\\n  \\r\\n  <span></span>\\r\\n  <span></span>\\r\\n  <span></span>\\r\\n    <br/><br/>\\r\\n</div>\"","import { Component }                    from '@angular/core';\r\nimport { ActivatedRoute, Params }       from '@angular/router';\r\nimport {  MyCurrencyService } from './app.currencyservice';\r\n\r\n@Component({\r\n    templateUrl: 'app.detail.html',\r\n    providers: [MyCurrencyService]\r\n})\r\nexport class DetailComponent {\r\n    coinName: string;\r\n    symbol: string;\r\n    index: number;\r\n    price: number;\r\n    priceInfo: any;\r\n\r\n    constructor(private route: ActivatedRoute, \r\n                private currencyService:MyCurrencyService) { }\r\n\r\n    // ngOnInit() gets called after the object is set up via the constructor.\r\n    // At this point, the class is able to handle the parameters passed to it.\r\n    ngOnInit() {\r\n        this.route.params.forEach((params: Params) => {\r\n            this.symbol = params['symbol'];\r\n            this.index = params['index'];\r\n            this.price = params['price'];\r\n            this.coinName = params['coinName']\r\n            //console.log(localID);\r\n            this.getCurrencyInformation();\r\n        });\r\n    }\r\n\r\n    getCurrencyInformation() {\r\n        this.currencyService.getCurrencyDetail(null, false)\r\n        .subscribe(\r\n            // 1. Handle successful data.\r\n            data => {\r\n\r\n                // Log the data in the console to see what it looks like.\r\n                // Be sure to use the debugger.\r\n                //console.log(JSON.stringify(data));\r\n                let FINAL_UPDATE = 1;\r\n                this.priceInfo    = data[\"Data\"][FINAL_UPDATE];\r\n                //console.log(\"Low: \" + this.priceInfo.low + \"   High: \" + this.priceInfo.high);\r\n            },\r\n            // 2. Handle error.\r\n            error => {\r\n                //console.log(error)\r\n            });\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { MyCurrencyService } from './app.currencyservice';\r\nimport { CryptoCurrencyType, coinList } from './CryptoModel';\r\n\r\n@Component({\r\n\r\n    template: `\r\n                \r\n                <ul id=\"coinList\">\r\n                    <li *ngFor=\"let crcy of currencyArray; index as i\">\r\n                    <a routerLink=\"/detail/{{crcy.name}}/{{crcy.symbol}}/{{i}}/{{currencyArray[i].price}}\" routerLinkActive=\"active\">{{crcy.name}}</a>\r\n                    \r\n                    <span> <b>{{crcy.symbol}}</b> </span>   \r\n                    <span> {{ crcy.price | currency:'USD'  }} USD <app-trend [index]=i></app-trend></span>\r\n                    \r\n                    </li>\r\n                    \r\n                </ul>`,\r\n\r\n    providers: [MyCurrencyService]\r\n})\r\n\r\nexport class HomeComponent {\r\n    name: String;\r\n    currencyArray: Array<CryptoCurrencyType>;\r\n    \r\n    constructor(private currencyService: MyCurrencyService) {\r\n        // Store local reference to MyDataService.\r\n        this.currencyArray = coinList;\r\n        this.getSomeData();\r\n        \r\n    }\r\n\r\n    // getCoinArrayIndex(abbreviation) {\r\n    //     for (var i = 0; i < this.currencyArray.length; i++) {\r\n    //         if (this.currencyArray[i].symbol == abbreviation) {\r\n    //             return i;\r\n    //         }\r\n    //     }\r\n    // }\r\n    \r\n    getSomeData() {\r\n        this.currencyService.getAllCurrencyPrices()\r\n            .subscribe(\r\n                data => {\r\n\r\n                    //console.log(JSON.stringify(data));\r\n                    for (var i = 0; i < this.currencyArray.length; i++) {\r\n\r\n                        let currentSymbol = this.currencyArray[i].symbol;\r\n                        //let idx           = this.getCoinArrayIndex(currentSymbol);\r\n                        this.currencyArray[i].price = data[currentSymbol].USD; //changed idx to i\r\n                    }\r\n                },\r\n                // 2. Handle error.\r\n                error => {\r\n                    console.log(error)\r\n                });\r\n    }\r\n\r\n}\r\n\r\n","import { Component} from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-links',\r\n  template: `\r\n  <a id=\"home\" routerLink=\"/home\" routerLinkActive=\"active\">Home</a><span> | </span> \r\n  <a id=\"about\" routerLink=\"/about\" routerLinkActive=\"active\">Login</a> \r\n  `,\r\n  \r\n})\r\n\r\nexport class LinksComponent{}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule }      from '@angular/core';\nimport { HttpModule }    from '@angular/http';\nimport { AppComponent }  from './app.component';\nimport { HomeComponent } from './app.home';\nimport { DetailComponent } from './app.detail';\nimport { routing }       from './app.routing';\nimport { AboutComponent } from './app.about';\nimport { LinksComponent } from './app.links';\nimport { FormsModule } from '@angular/forms';\nimport {PriceComp} from './app.priceComp'\n\n@NgModule({\n  declarations: [\n    AppComponent, DetailComponent, HomeComponent, AboutComponent, LinksComponent, PriceComp\n  ],\n  imports: [\n    BrowserModule, HttpModule, routing, FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class NameService {\r\n  name: string;\r\n  constructor(){\r\n    var str = sessionStorage.getItem('name');\r\n    if(str){\r\n      this.name = str;\r\n    } else {\r\n      this.name = null;\r\n    }\r\n  }\r\n}","import{Component, Input} from '@angular/core';\r\nimport { MyCurrencyService } from './app.currencyservice';\r\nimport { CryptoCurrencyType, coinList } from './CryptoModel';\r\n\r\n@Component({\r\n  selector: 'app-trend',\r\n  template: `<span [innerHTML]=trend></span>`,\r\n  providers: [MyCurrencyService]\r\n})\r\n\r\nexport class PriceComp {\r\n  @Input()\r\n  index: number;\r\n  trend: string;\r\n  currencyArray: Array<CryptoCurrencyType>;\r\n  symbol: string;\r\n\r\n  constructor(protected currencyService: MyCurrencyService){\r\n    this.currencyArray = coinList;\r\n    \r\n  }\r\n  ngOnInit(){\r\n    this.symbol = this.currencyArray[this.index].symbol;\r\n    this.currencyService.getCurrencyDetail(this.symbol, true)\r\n    .subscribe(\r\n      data=> {\r\n        let FINAL_UPDATE = 1;\r\n        let priceInfo = data[\"Data\"][FINAL_UPDATE];                        \r\n        if(priceInfo.close < priceInfo.open){\r\n            this.trend ='<b>&#x2193;</b>';\r\n        }\r\n        else {\r\n            this.trend = '<i>&#x2191;</i>';\r\n        }              \r\n      }, \r\n      error => {console.log(error)}\r\n    )\r\n  }\r\n}","import { ModuleWithProviders }   from '@angular/core';\r\nimport { Routes, RouterModule }  from '@angular/router';\r\nimport { AppComponent }          from './app.component';\r\nimport { DetailComponent }       from './app.detail';\r\nimport { HomeComponent }         from './app.home';\r\nimport { AboutComponent } from './app.about';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: 'detail/:coinName/:symbol/:index/:price', component: DetailComponent },\r\n  { path: 'home',     component: HomeComponent },\r\n  { path: 'about', component: AboutComponent},\r\n  { path: '**', component: HomeComponent}\r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}